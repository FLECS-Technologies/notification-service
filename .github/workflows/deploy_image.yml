name: deploy_image.yml
on:
  workflow_call:
    inputs:
      tag:
        type: string
        required: true
jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: template-rs_*
          path: ${{ runner.temp }}
          merge-multiple: 'true'
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v4
      - id: namespace
        uses: ./.github/actions/lowercase
        with:
          input: ${{ github.repository }}
      - name: Load and push images
        run: |
          docker load -i ${{ runner.temp }}/template-rs_${{ inputs.tag }}_x86_64-unknown-linux-gnu.tar
          docker load -i ${{ runner.temp }}/template-rs_${{ inputs.tag }}_aarch64-unknown-linux-gnu.tar
          docker load -i ${{ runner.temp }}/template-rs_${{ inputs.tag }}_armv7-unknown-linux-gnueabihf.tar

          docker push --platform linux/amd64 ghcr.io/${{ steps.namespace.outputs.output }}:${{ inputs.tag }}-amd64 
          docker push --platform linux/arm64 ghcr.io/${{ steps.namespace.outputs.output }}:${{ inputs.tag }}-arm64
          docker push --platform linux/arm/v7 ghcr.io/${{ steps.namespace.outputs.output }}:${{ inputs.tag }}-armhf

          docker manifest create ghcr.io/${{ steps.namespace.outputs.output }}:${{ inputs.tag }} \
            ghcr.io/${{ steps.namespace.outputs.output }}:${{ inputs.tag }}-amd64 \
            ghcr.io/${{ steps.namespace.outputs.output }}:${{ inputs.tag }}-arm64 \
            ghcr.io/${{ steps.namespace.outputs.output }}:${{ inputs.tag }}-armhf

          docker manifest push ghcr.io/${{ steps.namespace.outputs.output }}:${{ inputs.tag }}