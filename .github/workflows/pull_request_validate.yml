name: Validate pull request
on:
  workflow_dispatch:
  pull_request:
jobs:
  fmt:
    name: Validate code format with cargo fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      # actions-rust-lang/setup-rust-toolchain 1.12.0
      - uses: actions-rust-lang/setup-rust-toolchain@9d7e65c320fdb52dcd45ffaa68deb6c02c8754d9
      # actions-rust-lang/rustfmt 1.1.1
      - uses: actions-rust-lang/rustfmt@559aa3035a47390ba96088dffa783b5d26da9326
  lint:
    name: Lint code with cargo clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      # actions-rust-lang/setup-rust-toolchain 1.12.0
      - uses: actions-rust-lang/setup-rust-toolchain@9d7e65c320fdb52dcd45ffaa68deb6c02c8754d9
      - run: cargo clippy --all-targets --all-features --locked -- -D warnings
  doc:
    name: Build documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      # actions-rust-lang/setup-rust-toolchain 1.12.0
      - uses: actions-rust-lang/setup-rust-toolchain@9d7e65c320fdb52dcd45ffaa68deb6c02c8754d9
      - run: cargo doc --all-features --locked
      - uses: actions/upload-artifact@v4
        with:
          name: documentation
          path: target/doc/
  test:
    name: Run all tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      # actions-rust-lang/setup-rust-toolchain 1.12.0
      - uses: actions-rust-lang/setup-rust-toolchain@9d7e65c320fdb52dcd45ffaa68deb6c02c8754d9
      - run: |
          cargo test --all-features --locked
          cargo test --doc --locked
  build:
    name: Build application
    runs-on: ubuntu-latest
    container: flecspublic.azurecr.io/flecs-build
    strategy:
      matrix:
        target: [ "x86_64-unknown-linux-gnu", "aarch64-unknown-linux-gnu", "armv7-unknown-linux-gnueabihf" ]
    steps:
      - uses: actions/checkout@v4
      - name: Build binary
        run: |
          rustup target add ${{ matrix.target }}
          cargo build --all-features --locked --target ${{ matrix.target }}
      - uses: actions/upload-artifact@v4
        with:
          name: "${{ vars.APP_NAME }}_${{ matrix.target }}"
          path: "target/${{ matrix.target }}/debug/${{ vars.APP_NAME }}"
  determine_tag:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.define_tag.outputs.tag }}
    steps:
      - name: Define unique image tag
        id: define_tag
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            TAG="pr-${{ github.event.pull_request.number }}"
          else
            TAG="commit-${GITHUB_SHA::7}"
          fi
          echo "tag=$TAG" >> $GITHUB_OUTPUT
  docker:
    needs: [ determine_tag ]
    uses: ./.github/workflows/build_image.yml
    with:
      tag: ${{ needs.determine_tag.outputs.tag }}
      build_type: 'debug'
      registry: ${{ vars.DOCKER_REGISTRY }}
      app_name: ${{ vars.APP_NAME }}
      registry_namespace: ${{ vars.DOCKER_REGISTRY_NAMESPACE }}
